{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAM,CACVC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAKjC,SAASI,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEF,E,MAAUJ,IAEpBO,EAAO,C,SAAEH,E,MAAUJ,GAAQ,GAE5BA,EAAM,G,CAIbJ,EAAIC,KAAKe,iBAAiB,SAG1B,SAAqBC,GACnBA,EAAEC,iBAEF,MAAMC,EAAe,CACnBf,MAAOJ,EAAII,MAAMgB,MACjBf,KAAML,EAAIK,KAAKe,MACfd,OAAQN,EAAIM,OAAOc,OAGrBC,aAAaC,QA3BK,sBA2BgBC,KAAKC,UAAUL,G,IAXnDnB,EAAIC,KAAKe,iBAAiB,UAc1B,SAAsBC,GACpBA,EAAEC,iBACF,MAAQd,MAAAqB,EAAKpB,KAAEA,EAAIC,OAAEA,GAAWW,EAAES,cAAcC,SAC1CC,EAAaC,SAASJ,EAAML,OAC5BU,EAAYD,SAASxB,EAAKe,OAC1BW,EAAcF,SAASvB,EAAOc,OAEpC,IAAK,IAAIY,EAAI,EAAGA,EAAID,EAAaC,GAAK,EAAG,CAEvCzB,EAAcyB,EADAA,EAAIF,EAAYF,GAE7BK,MAAK,EAACzB,SAAEA,EAAQJ,MAAEA,MACnB8B,EAAApC,GAASqC,OAAOC,QAAQ,uBAAqB5B,QAAiBJ,MAAU,IAEzEiC,OAAM,EAAC7B,SAAEA,EAAQJ,MAAEA,MAClB8B,EAAApC,GAASqC,OAAOG,QAAQ,sBAAoB9B,QAAeJ,MAAU,G,CAGvEa,EAAES,cAAca,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst ref = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n};\n\nconst STORAGE_KEY = 'feedback-form-state';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => { \n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  })\n}\n\nref.form.addEventListener('input', onFormInput);\nref.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormInput(e) {\n  e.preventDefault();\n\n  const feedbackInfo = {\n    delay: ref.delay.value,\n    step: ref.step.value,\n    amount: ref.amount.value,\n  };\n\n  localStorage.setItem(STORAGE_KEY, JSON.stringify(feedbackInfo));\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n  const delayValue = parseInt(delay.value);\n  const stepValue = parseInt(step.value);\n  const amountValue = parseInt(amount.value);\n\n  for (let i = 0; i < amountValue; i += 1) {    \n    const delay = i * stepValue + delayValue;\n    createPromise(i, delay)\n    .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  }\n  e.currentTarget.reset();\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$ref","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","feedbackInfo","value","localStorage","setItem","JSON","stringify","delay2","currentTarget","elements","delayValue","parseInt","stepValue","amountValue","i","then","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.d40e93e1.js.map"}